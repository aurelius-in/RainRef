version: "3.8"
services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rainref
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/rainref
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    volumes:
      - db_data:/var/lib/postgresql/data

  opa:
    image: openpolicyagent/opa:latest
    command: ["run", "--server", "/policies"]
    volumes:
      - ../api/policies:/policies

  redis:
    image: redis:7-alpine

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    command: ["azurite", "-l", "/data", "--blobHost", "0.0.0.0", "--queueHost", "0.0.0.0", "--tableHost", "0.0.0.0"]
    volumes:
      - ./azurite:/data
    ports: ["10000:10000", "10001:10001", "10002:10002"]

  api:
    build: ../api
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/rainref
      BLOB_CONN_STRING: ${AZURE_BLOB_CONN_STRING}
      OPA_URL: http://opa:8181
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ALLOWED_ORIGINS: '["http://localhost:5173"]'
      API_KEY: ${API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      REQUIRE_JWT_FOR_ADMIN: "true"
      BEACON_SECRET: ${BEACON_SECRET}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      USE_LANGGRAPH: "false"
      USE_REDIS_LIMITER: "true"
      REDIS_URL: redis://redis:6379/0
    ports: ["8088:8080"]
    depends_on: [db, opa, azurite, redis]
    volumes:
      - ../api:/app

  web:
    build: ../web
    environment:
      VITE_API_URL: http://localhost:8088
    ports: ["5174:5173"]
    depends_on: [api]
    volumes:
      - ../web:/app
      - /app/node_modules
    command: sh -lc "npm install --no-fund --no-audit && npm run dev -- --host 0.0.0.0"

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"
      - "14268:14268"

volumes:
  db_data:
